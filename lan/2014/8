
标题：蚂蚁感冒

    长100厘米的细长直杆子上有n只蚂蚁。它们的头有的朝左，有的朝右。 

    每只蚂蚁都只能沿着杆子向前爬，速度是1厘米/秒。

    当两只蚂蚁碰面时，它们会同时掉头往相反的方向爬行。

    这些蚂蚁中，有1只蚂蚁感冒了。并且在和其它蚂蚁碰面时，会把感冒传染给碰到的蚂蚁。

    请你计算，当所有蚂蚁都爬离杆子时，有多少只蚂蚁患上了感冒。


【数据格式】

    第一行输入一个整数n (1 < n < 50), 表示蚂蚁的总数。

    接着的一行是n个用空格分开的整数 Xi (-100 < Xi < 100), Xi的绝对值，表示蚂蚁离开杆子左边端点的距离。正值表示头朝右，负值表示头朝左，数据中不会出现0值，也不会出现两只蚂蚁占用同一位置。其中，第一个数据代表的蚂蚁感冒了。

    要求输出1个整数，表示最后感冒蚂蚁的数目。

例如，输入：
3
5 -2 8
程序应输出：
1

再例如，输入：
5
-10 8 -20 12 25
程序应输出：
3

资源约定：
峰值内存消耗 < 256M
CPU消耗  < 1000ms


请严格按要求输出，不要画蛇添足地打印类似：“请您输入...” 的多余内容。

所有代码放在同一个源文件中，调试通过后，拷贝提交该源码。

注意: main函数需要返回0
注意: 只使用ANSI C/ANSI C++ 标准，不要调用依赖于编译环境或操作系统的特殊函数。
注意: 所有依赖的函数必须明确地在源文件中 #include <xxx>， 不能通过工程设置而省略常用头文件。

提交时，注意选择所期望的编译器类型。


********************************
解题思路

首先明白两只蚂蚁碰撞之后掉头和穿行过去是一样的，可以把穿行看做碰撞后掉头了，然后两个蚂蚁交换了，而是哪一只蚂蚁对结果不影响。

那么，假如第一只感冒蚂蚁向右走，那么碰到所有想左走的都会被感染，而感染后的蚂蚁必定是向左走的，那么他会把左边向右走的都感染了。

向左走的也是这样。

所以 ans = 左边向右走的  + 右边向左走的 + 1（本身）。

当然还有特殊情况，第一只感染的向右走，右边的都在向右走，那么速度一样的话它不会感染其他所有，所以 ans = 1，相反也是。

#include<iostream>
#include<cmath>
#include<cstring>
using namespace std;

int a[105];
int main()
{
	ios::sync_with_stdio(false);
	int n, one;
	cin>>n;
	memset(a,-1,sizeof(a));
	for(int i=0; i<n; i++){
		int x;
		cin>>x;
		if(i == 0){
			one = x;
		}
		x>0 ? a[x]=1 : a[-x]=0;
	}
	int l=0, r=0;
	for(int i=1; i<abs(one); i++){
		if(a[i] == 1){
			l++;
		}
	}
	for(int i=abs(one)+1; i<100; i++){
		if(a[i] == 0){
			r++;
		}
	}
	if((one>0&&r==0) || (one<0&&l==0)){
		cout<<1<<endl;
	}else{
		cout<<1+l+r<<endl;
	}
} 
