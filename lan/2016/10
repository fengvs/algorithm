最大比例
X星球的某个大奖赛设了M级奖励。每个级别的奖金是一个正整数。
并且，相邻的两个级别间的比例是个固定值。
也就是说：所有级别的奖金数构成了一个等比数列。比如：
16,24,36,54
其等比值为：3/2

现在，我们随机调查了一些获奖者的奖金数。
请你据此推算可能的最大的等比值。

输入格式：
第一行为数字 N (0<N<100)，表示接下的一行包含N个正整数
第二行N个正整数Xi(Xi<1 000 000 000 000)，用空格分开。每个整数表示调查到的某人的奖金数额

要求输出：
一个形如A/B的分数，要求A、B互质。表示可能的最大比例系数

测试数据保证了输入格式正确，并且最大比例是存在的。

例如，输入：
3
1250 200 32

程序应该输出：
25/4

再例如，输入：
4
3125 32 32 200

程序应该输出：
5/2

再例如，输入：
3
549755813888 524288 2

程序应该输出：
4/1

资源约定：
峰值内存消耗 < 256M
CPU消耗  < 3000ms
请严格按要求输出，不要画蛇添足地打印类似：“请您输入...” 的多余内容。
所有代码放在同一个源文件中，调试通过后，拷贝提交该源码。


/*
long long GGCD(long long x,long long y)/*最大公约数的变形方法求公共开方数*/ 
{
    long long t;
    if(x<y)
    {
        swap(x,y);
    }
    for(;x!=y;)
    {
        t=x/y;
        x=t>=y?t:y;
        y=t<=y?t:y;
    }
    return x;
}
*/
#include<cstdio>
#include<algorithm>
#include<cmath>
#define ll long long
using namespace std;
const int N = 100+5;

struct node{
	ll x,y;
	node(ll x,ll y):x(x),y(y){}
	node(){}
	bool operator < (const node b) const{
		return this->x*b.y < this->y*b.x;
	}
}c[N];
ll a[N];
int n,num;
//求 a 的 b 次方
ll mpw(ll a,ll b){
	ll ans = 1;
	while(b){
		if(b&1){
			ans *= a;
		}
		a *= a;
		b >>= 1;
	}
	return ans;
}
//求 a 的 b 次方根
//使用二分查找 
ll gen(ll x,ll k){
	ll r = mpw(10,max(15/k,(ll)1));
	ll l = 1;
	while(l < r){
		ll m = (l+r)>>1;
		ll t = mpw(m,k);
		if(t == x){
			return m;
		}else if(t < x){
			l = m+1;
		}else{
			r = m-1;
		}
	}
	return l;
}
//检查比例为 a/b 时，是否满足条件 
bool check(ll a,ll b){
	ll aa=a, bb=b, na=1,nb=1;
	for(int i=0; i<num; i++){
		while(a < c[i].x){
			a *= aa;
			na++;
		}
		while(b < c[i].y){
			b *= bb;
			nb++;
		}
		if(a!=c[i].x || b!=c[i].y || (b!=1&&na!=nb)){
			return false;
		}
	}
	return true;
}
int main()
{
	scanf("%d", &n);
	for(int i=0; i<n; ++i){
		scanf("%lld", &a[i]);
	}
	sort(a,a+n);
	num = 0;
	for(int i=0; i<n-1; i++){
		ll g = __gcd(a[i+1], a[i]);
		if(a[i+1]/g==1 && a[i]/g==1){ //去掉比例为 1 的 
			continue;
		}
		c[num++] = node(a[i+1]/g, a[i]/g);
	}
	sort(c,c+n);
	if(check(c[0].x,c[0].y)){
		printf("%lld/%lld\n", c[0].x,c[0].y);
		return 0;
	}
	for(ll i=2; ;i++){
		ll a = gen(c[0].x,i);
		ll b = gen(c[0].y,i);
		if(check(a,b)){
			printf("%lld/%lld\n", a,b);
			break;
		}
		//printf("%lld %lld\n",a,b);
	}
} 
