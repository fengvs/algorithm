
机器人塔

X星球的机器人表演拉拉队有两种服装，A和B。
他们这次表演的是搭机器人塔。

类似：

     A
    B B
   A B A
  A A B B
 B B B A B
A B A B B A

队内的组塔规则是：
  
  A 只能站在 AA 或 BB 的肩上。
  B 只能站在 AB 或 BA 的肩上。

你的任务是帮助拉拉队计算一下，在给定A与B的人数时，可以组成多少种花样的塔。

输入一行两个整数 M 和 N，空格分开（0<M,N<500）,分别表示A、B的人数，保证人数合理性。

要求输出一个整数，表示可以产生的花样种数。

例如：
用户输入：
1 2

程序应该输出：
3


再例如：
用户输入：
3 3

程序应该输出：
4

资源约定：
峰值内存消耗 < 256M
CPU消耗  < 1000ms

请严格按要求输出，不要画蛇添足地打印类似：“请您输入...” 的多余内容。

所有代码放在同一个源文件中，调试通过后，拷贝提交该源码。

注意: main函数需要返回0
注意: 只使用ANSI C/ANSI C++ 标准，不要调用依赖于编译环境或操作系统的特殊函数。
注意: 所有依赖的函数必须明确地在源文件中 #include <xxx>， 不能通过工程设置而省略常用头文件。

提交时，注意选择所期望的编译器类型。

/*
暴力搜索：先确定最下边一行（2^44）
*/
#include<cstdio>
#include<iostream>
using namespace std;

int m, n, t;
void id()
{
	int sum=1;
	t = 1;
	while(sum < m+n){
		t++;
		sum += t;
	}
}
int mp[50][50], ans=0;
void dfs(int x,int a,int b)
{
	if(a>m || b>n){
		return ;
	} 
	if(x > t){
		if(a==m && b==n)
			ans++;
		return ;
	}
	int ta=a, tb=b;
	mp[1][x] = 0;
	a++;
	for(int i=2; i<=x; i++){
		if(mp[i-1][x-1] == mp[i-1][x]){
			mp[i][x] = 0;
			a++;
		}else{
			mp[i][x] = 1;
			b++;
		}
	}
	dfs(x+1, a, b);
	a=ta, b=tb;
	mp[1][x] = 1;
	b++;
	for(int i=2; i<=x; i++){
		if(mp[i-1][x-1] == mp[i-1][x]){
			mp[i][x] = 0;
			a++;
		}else{
			mp[i][x] = 1;
			b++;
		}
	}
	dfs(x+1, a, b);
	//a=ta, b=tb;
}
int main()
{
	cin>>m>>n;
	id();
	dfs(1,0,0);
	cout<<ans<<endl;
} 
