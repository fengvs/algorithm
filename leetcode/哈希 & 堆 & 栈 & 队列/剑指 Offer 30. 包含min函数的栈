剑指 Offer 30. 包含min函数的栈

定义栈的数据结构，请在该类型中实现一个能够得到栈的最小元素的 min 函数在该栈中，调用 min、push 及 pop 的时间复杂度都是 O(1)。

示例:
MinStack minStack = new MinStack();
minStack.push(-2);
minStack.push(0);
minStack.push(-3);
minStack.min();   --> 返回 -3.
minStack.pop();
minStack.top();      --> 返回 0.
minStack.min();   --> 返回 -2.

解法：
方法一：单调栈
开一个辅助栈，递减（非严格降序）
1.入栈，若栈为空，或当前值比栈顶元素值小，则入栈
2.出栈，若出栈元素与辅助栈相同，则出栈


code：
方法一：
class MinStack {
public:
    /** initialize your data structure here. */
    stack<int> A, B;
    MinStack() {

    }
    
    void push(int x) {
        A.push(x);
        if(B.empty() || x <= B.top()){ // 入栈条件
            B.push(x);
        }
    }
    
    void pop() {
        if(B.top() == A.top()){ // 出栈条件
            B.pop();
        }
        A.pop();
    }
    
    int top() {
        return A.top();
    }
    
    int min() {
        return B.top();
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(x);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->min();
 */
