给定一个 没有重复 数字的序列，返回其所有可能的全排列。

示例:
输入: [1,2,3]
输出:
[
  [1,2,3],
  [1,3,2],
  [2,1,3],
  [2,3,1],
  [3,1,2],
  [3,2,1]
]

解法：
方法一：DFS
交换两两位置，再回溯

code：
方法一：
class Solution {
public:
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> ans;
        dfs(ans, nums, 0);
        return ans;
    }
    void dfs(vector<vector<int>>& ans, vector<int>& nums, int p){
        if(p >= nums.size()){
            ans.push_back(nums);
            return ;
        }
        for(int i=p; i<nums.size(); i++){ // 交换位置
            swap(nums[p], nums[i]);
            dfs(ans, nums, p+1);
            swap(nums[p], nums[i]); // 回溯
        }
    }
};
