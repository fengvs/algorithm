#75. 颜色分类

给定一个包含红色、白色和蓝色，一共 n 个元素的数组，原地对它们进行排序，使得相同颜色的元素相邻，并按照红色、白色、蓝色顺序排列。
此题中，我们使用整数 0、 1 和 2 分别表示红色、白色和蓝色。

注意:
不能使用代码库中的排序函数来解决这道题。

示例:
输入: [2,0,2,1,1,0]
输出: [0,0,1,1,2,2]

解法：
方法一：排序

方法二：两趟扫描
扫描一遍计算0 1 2的个数，然后重写数组

方法三：一趟扫描--双指针
定义双指针l和r，分别代表0的右边界 和 2的左边界
时间复杂度 O(n), 空间复杂度 O(1)

code：
方法三：
class Solution {
public:
    void sortColors(vector<int>& nums) {
        int l=0, r=nums.size()-1;
        int p = 0;
        while(p <= r){
            if(nums[p] == 0){
                swap(nums[l], nums[p]);
                l++;
                p++;
            }else if(nums[p] == 2){
                swap(nums[p], nums[r]);
                r--;
            }else{
                p++;
            }
        }
    }
};
